version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm cache
          keys: [frontend-build]
      - run:
          name: build-frontend
          command: |
            cd frontend
            npm install
            npm run build 



  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys: [backend-build]
      - run:
          name: build-backend
          command: |
            cd backend
            npm install
            npm run build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm pckage cache
          keys: [frontend-test]
      - run:
          name: test-frontend
          command: |
              cd frontend
              npm install
              npm run test

  test-backend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys: [backend-test]
      - run:
          name: test-backend
          command: |
              cd backend
              npm install
              npm run test
      


  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys: [frontend-scan]
      - run:
          name: scan-frontend
          command: |
              cd frontend
              npm install
              npm audit fix --force



  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys: [backend-scan]
      - run:
          name: scan-backend
          command: |
              cd backend
              npm install
              npm fund
              npm audit fix --force

    deploy-infrastructure:
      docker:
        - image: circleci/aws-cli@3.1.1
      steps:
        - checkout
        - run:
            name: Install dependencies
            command: |
                  cd .circleci/files
                  aws cloudformation deploy \
                          --template-file cloudfront.yml \
                          --stack-name InitialStack \
                          --parameter-overrides WorkflowID=udapeople-kk1j287dhjppmz0000

    
              







workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]